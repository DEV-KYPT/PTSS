function main(){
  /////////////////////////////////////////////////////////////
  var t = new Tournament();
  Logger.log(t.toString());
  t.pharse(1)
  Logger.log(t.interpret(2))


  /////////////////////////////////////////////////////////////
  var p = new Pf(3,6)
  p.pharse(3)
  Logger.log(p.interpret(2))

  /////////////////////////////////////////////////////////////
  // var r = new Rm(2,8)
  // r.pharse()
  // Logger.log(""+r)

  /////////////////////////////////////////////////////////////
  // var s = new St(5,5,3)
  // s.pharse()
  // Logger.log(""+s)

  /////////////////////////////////////////////////////////////
  // var array1 = [
  //   ["0-0",'0-1','0-2','0-3'],
  //   ["1-0",'1-1','1-2','1-3'],
  //   ["2-0",'2-1','2-2','2-3'],
  //   ["3-0",'3-1','3-2','3-3'],
  // ]
  // var array2 = [
  //   ['0-0A2','0-1A2','0-2A2','0-3A2','0-4A2'],
  //   ['1-0A2','1-1A2','1-2A2','1-3A2','1-4A2'],
  //   ['2-0A2','2-1A2','2-2A2','2-3A2','2-4A2'],
  //   ['3-0A2','3-1A2','3-2A2','3-3A2','3-4A2'],
  //   ['4-0A2','4-1A2','4-2A2','4-3A2','4-4A2'],
  // ]
  // Logger.log(string_2d(slice_2d(array2,[0,1],[3,4]),"ARR",1,true,4))
  // Logger.log(multistring_2d([array1,array2],['A','B'],3,true,2))

  /////////////////////////////////////////////////////////////
  // Logger.log("".split(",").map(str => Number(str)).filter(num => num != 0))
  // Logger.log("1,,,,,,2,3".split(","))
  // Logger.log(Number(" 4"))
}